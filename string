./conmanv4/munger.scm:15:(define generic-email-regexp (make-regexp "[A-Za-z0-9.-]*@[-A-Za-z0-9.]+(\\.com|\\.edu|\\.org|\\.net|\\.uk|\\.fr|\\.de|\\.it|\\.ru|\\.in|\\.au|\\.ca|\\.io|\\.py|\\.se|\\.dk|\\.sg|\\.be)" regexp/extended))
./conmanv4/munger.scm:20:  (let* ((a (if (car lst) (list (+ (match:start (car lst)) 1)(- (match:end (car lst)) 39)) #f))
./conmanv4/munger.scm:21:	 (b (if (cadr lst) (list (+ (match:start (cadr lst)) 1)(- (match:end (cadr lst)) 39)) #f))
./conmanv4/munger.scm:22:	 (c (if (caddr lst) (list (+ (match:start (caddr lst)) 1)(- (match:end (caddr lst)) 11)) #f))
./conmanv4/munger.scm:23:	 (d (if (cadddr lst) (list (+ (match:start (cadddr lst)) 1)(- (match:end (cadddr lst)) 0)) #f))
./conmanv4/munger.scm:48:	  (affiliation (if affiliation-pre (string-trim-both (xsubstring (match:string affiliation-pre) (+ (match:start affiliation-pre) 1)(- (match:end affiliation-pre) 1))) #f))
./conmanv4/munger.scm:61:	 (affil-num (xsubstring (match:string affil-num-pre) (+ (match:start affil-num-pre) 1)(- (match:end affil-num-pre) 6)))
./conmanv4/munger.scm:63:	 (affiliation (string-trim-both (xsubstring (match:string affiliation-pre) (+ (match:start affiliation-pre) 6) (-(match:end affiliation-pre) 5 ) )))
./conmanv4/munger.scm:79:  (make-regexp "data-ga-label=[a-zA-Z0-9~_+=,.:;'()//&#@<>/\" -]+</a></sup><span" regexp/extended))
./conmanv4/cemail.scm:59:  (string-append "/tmp/" pre "-" (number->string (random 10000000000000000000000)) "." suff))
./conmanv4/cemail.scm:66:	(set! text (string-append text (cdr (assoc  "firstn" (car lst))) " - " (cdr (assoc  "email" (car lst))) "\n"))
./conmanv4/cemail.scm:69:	(set! text (string-append text (cdr (assoc  "firstn" (car lst))) " - " (cdr (assoc  "email" (car lst))) "\n"))	
./conmanv4/cemail.scm:80:  (let* ((str1 "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n<html><head><title></title></head><body style=\"font-family:Arial;font-size:14px\">\n<p>Dear ")
./conmanv4/cemail.scm:83:	 (str4 "</i> suggests you might benefit from our product.<br>\nVisit <a href=\"http://www.labsolns.com\">Laboratory Automation Solutions</a> and learn how LIMS*Nucleus can help you.<br><br>\nLIMS*Nucleus can:<br><br>\n&nbsp; &nbsp; &nbsp; &nbsp; *&nbsp; &nbsp;Reformat plates - four 96 well plates into a 384 well plate; four 384 well plates into a 1536 well plate<br>\n&nbsp; &nbsp; &nbsp; &nbsp; *&nbsp; &nbsp;Associate assay data with plate sets<br>\n&nbsp; &nbsp; &nbsp; &nbsp; *&nbsp; &nbsp;Identify hits scoring in assays using included algorithms - or write your own<br>\n&nbsp; &nbsp; &nbsp; &nbsp; *&nbsp; &nbsp;Export annotated data<br>\n&nbsp; &nbsp; &nbsp; &nbsp; *&nbsp; &nbsp;Generate worklists for liquid handling robots<br>\n&nbsp; &nbsp; &nbsp; &nbsp; *&nbsp; &nbsp;Rearray hits into a smaller collection of plates<br>\n
./conmanv4/cemail.scm:98:	 (str8 " suggests you might benefit from our product.\nVisit Laboratory Automation Solutions at www.labsolns.com and learn how LIMS*Nucleus can help you.\n\nLIMS*Nucleus can:\n\n-Reformat plates - four 96 well plates into a 384 well plate; four 384 well plates into a 1536 well plate\n-Associate assay data with plate sets\n-Identify hits scoring in assays using included algorithms - or write your own\n-Export annotated data\n-Generate worklists for liquid handling robots\n-Rearray hits into a smaller collection of plates\n-Track samples\n\nLIMS*Nucleus can serve as the core of a LIMS system.\nPrototype algorithms, dashboards, visualizations with R/Shiny.\nDownload a free copy or evaluate an online running instance by visiting www.labsolns.com/software/evaluate/\n\nFor more information contact info@labsolns.com\n\nThank You!")
./conmanv4/cemail.scm:105:	 ;; (smtp-command (string-append conman-store-dir "/bin/smtp-cli --host mail.labsolns.com:587 --subject 'Multi-well plate management software' --enable-auth --user info@labsolns.com --password EKhD8GB48F8wFalt --from info@labsolns.com --to " (assoc-ref item "email") " --bcc info@labsolns.com --body-plain " txt-file-name " --body-html " html-file-name " --attach-inline " conman-store-dir "/scripts/las.png"))
./conmanv4/cemail.scm:106:	 (smtp-command (string-append "smtp-cli --host mail.labsolns.com:587 --subject 'Multi-well plate management software' --enable-auth --user info@labsolns.com --password EKhD8GB48F8wFalt --from info@labsolns.com --to " (assoc-ref item "email") " --bcc info@labsolns.com --body-plain " txt-file-name " --body-html " html-file-name " --attach-inline " conman-store-dir "/scripts/las.png"))
./conmanv4/cemail.scm:131:	 (smtp-command (string-append "smtp-cli --host mail.labsolns.com:587 --subject 'Summary for batch " (assoc-ref lst "batchid") "' --enable-auth --user info@labsolns.com --password EKhD8GB48F8wFalt --from info@labsolns.com --to info@labsolns.com --body-plain " txt-file-name ))
./conmanv4/utilities.scm:25:	(c (map (lambda (x) (substring x 34 (- (string-length x) 7))) b))
./conmanv4/utilities.scm:27:	(last-auth (list-cdr-ref c (- (length c) 1)))
./conmanv4/utilities.scm:75:	(end-offset-pre (map (lambda (x) (- x 1)) starts))
./conmanv4/pubmed.scm:35:	    (set! results (append  results (list (xsubstring (match:string (caar lst) )  (+ (match:start (caar lst)) 4) (- (match:end (caar lst)) 5) )))))
./conmanv4/pubmed.scm:40:            (set! results (append  results (list (xsubstring (match:string (caar lst) )  (+ (match:start (caar lst)) 4) (- (match:end (caar lst)) 5) )))))
./conmanv4/pubmed.scm:49:	    (set! results (append  results (list (xsubstring (match:string (caar lst) )  (+ (match:start (caar lst)) 43) (- (match:end (caar lst)) 7) )))))
./conmanv4/pubmed.scm:54:            (set! results (append  results (list (xsubstring (match:string (caar lst) )  (+ (match:start (caar lst)) 43) (- (match:end (caar lst)) 7) )))))
./conmanv4/pubmed.scm:63:	    (set! results (append  results (list (xsubstring (match:string (caar lst) )  (+ (match:start (caar lst)) 33) (- (match:end (caar lst)) 7) )))))
./conmanv4/pubmed.scm:68:            (set! results (append  results (list (xsubstring (match:string (caar lst) )  (+ (match:start (caar lst)) 33) (- (match:end (caar lst)) 7) )))))
./conmanv4/pubmed.scm:77:  ;; i.e. the summaries list is the input - pass in c
./conmanv4/pubmed.scm:96:  ;; calls get-id-authors which provides the return value -- the list (("37658855")  ("Jirangkul P"   "Lorsuwannarat N"   "Wanichjaroen N"))
./conmanv4/pubmed.scm:100:	(query (string-append "(((96+well+plate)+OR+(high+throughput+screening))+OR+(multi+well+plate+assay))+AND+((\"" (uri-encode two-weeks-ago) "\"[Date+-+Entry]+%3A+\"" (uri-encode two-weeks-ago) "\"[Date+-+Entry]))"))
./conmanv4/pubmed.scm:112:		      (all-ids-concat (xsubstring all-ids-concat 0 (- (string-length all-ids-concat) 1)))
./conmanv4/pubmed.scm:215:	 (b (map (lambda (x) (substring x 4 (- (string-length x) 5))) a))
./conmanv4/pubmed.scm:242:;;     |--> (find-fl-aoi aoi)                                                OK
./conmanv4/pubmed.scm:246:;;     |         |--> (get-articles-for-auth aoi)                            OK
./conmanv4/pubmed.scm:249:;;     |         |--> (map first-or-last-auth? aoi pmid)                     OK
./conmanv4/pubmed.scm:253:;;     |--> (map search-fl-for-auth aoi pmid)
./conmanv4/pubmed.scm:351:	 (b (map (lambda (x) (substring x 34 (- (string-length x) 7)) ) a))
./conmanv4/pubmed.scm:353:	 (d (xsubstring x (+ (match:start c) 4) (- (match:end c) 5))))
./conmanv4/pubmed.scm:393:;; 	 (b (map (lambda (x) (substring x 34 (- (string-length x) 7)) ) a))
./conmanv4/pubmed.scm:395:;; 	 (d (xsubstring x (+ (match:start c) 4) (- (match:end c) 5))))
./conmanv4.scm:40:;;     - fast: munger/get-author-records extracts authors from article; also extracts affiliations
./bin/smtp-cli:16:#   - Use DNS for MX resolution when no --server is given
./bin/smtp-cli:19:#   - Don't attempt to use IO::Socket::INET6 with --ipv4.
./bin/smtp-cli:22:#   - New parameter --local-addr
./bin/smtp-cli:23:#   - Support body and attachment reading from non-regular files
./bin/smtp-cli:24:#   - Various protocol fixes
./bin/smtp-cli:27:#   - Support STDIN input with --body-plain=- or --body-html=-
./bin/smtp-cli:30:#   - Improved compatibility with perl < 5.10 and perl >= 5.18
./bin/smtp-cli:31:#   - Added support for more chars in user-part of email address.
./bin/smtp-cli:34:#   - Improved compliance with SMTP RFC 5321
./bin/smtp-cli:35:#   - New parameter --text-encoding
./bin/smtp-cli:38:#   - Ok, ok, support both File::Type and File::LibMagic
./bin/smtp-cli:41:#   - Moved from File::Type to File::LibMagic
./bin/smtp-cli:46:#   - Fixed syntax error
./bin/smtp-cli:49:#   - New --add-header, --replace-header and --remove-header options.
./bin/smtp-cli:50:#   - Improved compatibility with new IO::Socket::SSL releases.
./bin/smtp-cli:53:#   - Support for server SSL verification agains CA root cert.
./bin/smtp-cli:54:#   - Use "Content-Disposition: attachment" for all attachments
./bin/smtp-cli:55:#     unless --attach-inline was used.
./bin/smtp-cli:56:#   - No longer default to --server=localhost
./bin/smtp-cli:57:#   - Support for --charset=<charset> affecting all text/* parts.
./bin/smtp-cli:58:#   - Ensure "To: undisclosed-recipients:;" if sending only to Bcc.
./bin/smtp-cli:61:#   - Fixed problem when using IPv6 addresses with --server.
./bin/smtp-cli:62:#     For example with --server 2001:db8::123 it was connecting
./bin/smtp-cli:66:#   - Added --ssl to support for SSMTP (SMTP over SSL). This is
./bin/smtp-cli:67:#     turned on by default when --port=465.
./bin/smtp-cli:70:#   - Added support for Cc header (--cc=...)
./bin/smtp-cli:71:#   - Addressess (From, To, Cc) can now contain a "display name",
./bin/smtp-cli:72:#     for example --from="Michal Ludvig <michal@logix.cz>"
./bin/smtp-cli:73:#   - Support for --mail-from and --rcpt-to addresses independent
./bin/smtp-cli:74:#     on --from, --to, --cc and --bcc
./bin/smtp-cli:75:#   - Fixed warnings in Perl 5.12
./bin/smtp-cli:78:#   - Message building fixed for plaintext+attachment case.
./bin/smtp-cli:79:#   - Auto-enable AUTH as soon as --user parameter is used.
./bin/smtp-cli:80:#     (previously --enable-auth or --auth-plain had to be used
./bin/smtp-cli:81:#      together with --user, that was confusing).
./bin/smtp-cli:82:#   - New --print-only parameter for displaying the composed
./bin/smtp-cli:84:#   - All(?) non-standard modules are now optional.
./bin/smtp-cli:85:#   - Displays local and remote address on successfull connect.
./bin/smtp-cli:88:#   - IPv6 support provided the required modules are
./bin/smtp-cli:92:#   - Make the MIME modules optional. Simply disable
./bin/smtp-cli:96:#   - Support for message building through MIME::Lite,
./bin/smtp-cli:100:#   - STARTTLS and AUTH support
./bin/smtp-cli:103:#   - First public version
./bin/smtp-cli:108:## Require Perl 5.8 or higher -> we need open(.., .., \$variable) construct
./bin/smtp-cli:211:		warn("!!! IO::Socket::INET6 -- optional module not found\n");
./bin/smtp-cli:212:		warn("!!! Socket6 -- optional module not found\n");
./bin/smtp-cli:221:	warn("!!! MIME::Lite -- optional module not found\n");
./bin/smtp-cli:222:	warn("!!! Used for composing messages from --subject, --body, --attachment, etc.\n\n");
./bin/smtp-cli:242:	warn("!!! Term::ReadKey -- optional module not found\n");
./bin/smtp-cli:252:	warn("!!! Digest::HMAC_MD5 -- optional module missing\n");
./bin/smtp-cli:259:	warn("!!! Net::DNS -- optional module not found\n");
./bin/smtp-cli:264:## Advise about --missing-modules-ok parameter
./bin/smtp-cli:266:	warn("!!! Use --missing-modules-ok if you don't need the above listed modules\n");
./bin/smtp-cli:270:## Make sure the --text-encoding value is valid
./bin/smtp-cli:273:	die ("The --text-encoding value is invalid: $text_encoding\nMust be one of: " . join(', ', @valid_encodings) . "\n");
./bin/smtp-cli:279:		die ("The --from string does not contain a valid email address: $from\n");
./bin/smtp-cli:312:			$host = $mx[0]->exchange;
./bin/smtp-cli:318:		die("Error: Specify the SMTP server with --server=hostname[:port]\n");
./bin/smtp-cli:342:		    "Use --data and provide a complete email payload including headers instead.\n");
./bin/smtp-cli:345:		die("Requested building a message and at the same time used --data parameter.\n".
./bin/smtp-cli:354:		} elsif ($body_plain eq "-") {
./bin/smtp-cli:365:		} elsif ($body_html eq "-") {
./bin/smtp-cli:383:# Username was given -> enable AUTH
./bin/smtp-cli:387:# If at least one --auth-* option was given, enable AUTH.
./bin/smtp-cli:391:# If --enable-auth was given, enable all AUTH methods.
./bin/smtp-cli:401:	{ die ("SMTP AUTH support requested without --user\n"); }
./bin/smtp-cli:410:		warn ("Module Term::ReadKey not available - password WILL NOT be hidden!!!\n");
./bin/smtp-cli:435:	# If the user requested --ipv4 don't even bother with INET6 module
./bin/smtp-cli:439:	# Either --ipv6 or no preference - do the best we can
./bin/smtp-cli:464:$ehlo_ok-- if ($text !~ /ESMTP/);
./bin/smtp-cli:485:		warn ("Module IO::Socket::SSL is missing - STARTTLS support disabled.\n");
./bin/smtp-cli:486:		warn ("Use --disable-starttls or install the modules to avoid this warning.\n");
./bin/smtp-cli:609:		elsif ($datasrc eq "-")
./bin/smtp-cli:630:			# RFC 5321 section 4.5.2 - leading dot must be doubled
./bin/smtp-cli:632:			# RFC 5321 section 2.3.8 - ensure CR-LF line ending
./bin/smtp-cli:659:	$more = ($sep eq "-");
./bin/smtp-cli:766:	if ($addr =~ /([A-Z0-9._%=#+-]+@(?:[A-Z0-9-]+\.)+[A-Z]+)\b/i) {
./bin/smtp-cli:869:			die("Inline attachments (--attach-inline) must be used with --body-html\n");
./bin/smtp-cli:905:			# Only one single attachment - let it be the body
./bin/smtp-cli:920:	# Last resort - empty plaintext message
./bin/smtp-cli:930:	$message->replace("Message-ID" => "<".time()."-".int(rand(999999))."\@smtp-cli>");
./bin/smtp-cli:969:Usage: smtp-cli [--options]
./bin/smtp-cli:971:        --server=<hostname>[:<port>]
./bin/smtp-cli:974:                                use --port.
./bin/smtp-cli:976:                                for the first recipient (e.g. --to, --cc, etc).
./bin/smtp-cli:977:        --port=<number>         Port where the SMTP server is listening.
./bin/smtp-cli:979:        -4 or --ipv4            Use standard IP (IPv4) protocol.
./bin/smtp-cli:980:        -6 or --ipv6            Use IPv6 protocol. For hosts that have
./bin/smtp-cli:983:        --local-addr=<address>  Specify local address (by default the OS chooses)
./bin/smtp-cli:985:        --hello-host=<string>   String to use in the EHLO/HELO command.
./bin/smtp-cli:986:        --disable-ehlo          Don't use ESMTP EHLO command, only HELO.
./bin/smtp-cli:987:        --force-ehlo            Use EHLO even if server doesn't say ESMTP.
./bin/smtp-cli:990:        --disable-starttls      Don't use encryption even if the remote
./bin/smtp-cli:992:        --ssl                   Start in SMTP/SSL mode (aka SSMTP).
./bin/smtp-cli:993:                                Default when --port=465
./bin/smtp-cli:994:        --disable-ssl           Don't start SSMTP even if --port=465
./bin/smtp-cli:995:        --ssl-ca-file=<filename>
./bin/smtp-cli:998:        --ssl-ca-path=<dirname> Similar to --ssl-ca-file but will look for
./bin/smtp-cli:1006:        --user=<username>       Username for SMTP authentication.
./bin/smtp-cli:1007:        --pass=<password>       Corresponding password.
./bin/smtp-cli:1008:        --auth-login            Enable only AUTH LOGIN method.
./bin/smtp-cli:1009:        --auth-plain            Enable only AUTH PLAIN method.
./bin/smtp-cli:1010:        --auth-cram-md5         Enable only AUTH CRAM-MD5 method.
./bin/smtp-cli:1011:        --auth                  Enable all supported methods. This is
./bin/smtp-cli:1012:                                normally not needed, --user enables
./bin/smtp-cli:1016:        --from=\"Display Name <add\@re.ss>\"
./bin/smtp-cli:1018:        --to=\"Display Name <add\@re.ss>\"
./bin/smtp-cli:1019:        --cc=\"Display Name <add\@re.ss>\"
./bin/smtp-cli:1020:        --bcc=\"Display Name <add\@re.ss>\"
./bin/smtp-cli:1023:                                The --bcc addresses won't apprear in
./bin/smtp-cli:1027:        (rarely needed, use --from, --to, --cc and --bcc instead)
./bin/smtp-cli:1028:        --mail-from=<address>   Address to use in MAIL FROM command.
./bin/smtp-cli:1029:                                Use --from instead, unless you want
./bin/smtp-cli:1032:        --rcpt-to=<address>     Address to use in RCPT TO command. Can be
./bin/smtp-cli:1034:                                use --to, --cc and --bcc instead.
./bin/smtp-cli:1035:                                If set the --to, --cc and --bcc will only
./bin/smtp-cli:1040:        --data=<filename>       Name of file to send after DATA command.
./bin/smtp-cli:1041:                                With \"--data=-\" the script will read
./bin/smtp-cli:1045:        --subject=<subject>     Subject of the message
./bin/smtp-cli:1046:        --body-plain=<text|filename>
./bin/smtp-cli:1047:        --body-html=<text|filename>
./bin/smtp-cli:1051:        --charset=<charset>     Character set used for Subject and Body,
./bin/smtp-cli:1053:        --text-encoding=<encoding>
./bin/smtp-cli:1059:        --attach=<filename>[\@<MIME/Type>]
./bin/smtp-cli:1064:                                For instance: --attach mail.log\@text/plain
./bin/smtp-cli:1066:        --attach-inline=<filename>[\@<MIME/Type>]
./bin/smtp-cli:1071:                                See --attach for details about MIME-Type.
./bin/smtp-cli:1073:        --add-header=\"Header: value\"
./bin/smtp-cli:1074:        --replace-header=\"Header: value\"
./bin/smtp-cli:1075:        --remove-header=\"Header\"
./bin/smtp-cli:1078:                                Mailer use --replace-header=\"X-Mailer: Blah\",
./bin/smtp-cli:1079:                                to remove it altogether --remove-header=X-Mailer
./bin/smtp-cli:1081:                                --add-header=\"X-Something: foo bar\".
./bin/smtp-cli:1082:        --print-only            Dump the composed MIME message to standard
./bin/smtp-cli:1088:        --verbose[=<number>]    Be more verbose, print the SMTP session.
./bin/smtp-cli:1089:        --missing-modules-ok    Don't complain about missing optional modules.
./bin/smtp-cli:1090:        --version               Print: smtp-cli version $version
./bin/smtp-cli:1091:        --help                  Guess what is this option for ;-)
./.git/info/exclude:1:# git ls-files --others --exclude-from=.git/info/exclude
./.git/hooks/pre-rebase.sample:11:# $1 -- the upstream the series was forked from.
./.git/hooks/pre-rebase.sample:12:# $2 -- the branch being rebased (or empty when rebasing the current branch).
./.git/hooks/pre-rebase.sample:46:not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
./.git/hooks/pre-rebase.sample:67:	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
./.git/hooks/pre-rebase.sample:125:    build on top of it -- other people may already want to
./.git/hooks/pre-rebase.sample:133:		   o---o---o---o---o---o---o---o---o---o "next"
./.git/hooks/pre-rebase.sample:135:		 /   a---a---b A     /           /
./.git/hooks/pre-rebase.sample:137:	       /   /   c---c---c---c B         /
./.git/hooks/pre-rebase.sample:139:	     /   /   /   b---b C     \       /
./.git/hooks/pre-rebase.sample:141:    ---o---o---o---o---o---o---o---o---o---o---o "master"
./.git/hooks/push-to-checkout.sample:50:if ! git update-index -q --ignore-submodules --refresh
./.git/hooks/push-to-checkout.sample:55:if ! git diff-files --quiet --ignore-submodules --
./.git/hooks/push-to-checkout.sample:67:	head=$(git hash-object -t tree --stdin </dev/null)
./.git/hooks/push-to-checkout.sample:70:if ! git diff-index --quiet --cached --ignore-submodules $head --
./.git/hooks/pre-commit.sample:10:if git rev-parse --verify HEAD >/dev/null 2>&1
./.git/hooks/pre-commit.sample:19:allownonascii=$(git config --type=bool hooks.allownonascii)
./.git/hooks/pre-commit.sample:31:	test $(git diff --cached --name-only --diff-filter=A -z $against |
./.git/hooks/pre-commit.sample:32:	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
./.git/hooks/pre-commit.sample:49:exec git diff-index --check --cached $against --
./.git/hooks/fsmonitor-watchman.sample:78:	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
./.git/hooks/fsmonitor-watchman.sample:126:		$retry--;
./.git/hooks/prepare-commit-msg.sample:15:# The second includes the output of "git diff --name-status -r"
./.git/hooks/prepare-commit-msg.sample:17:# commented because it doesn't cope with --amend or with squashed
./.git/hooks/prepare-commit-msg.sample:32:#       print "\n" . `git diff --cached --name-status -r`
./.git/hooks/prepare-commit-msg.sample:38:# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
./.git/hooks/update.sample:9:# ------
./.git/hooks/update.sample:27:# --- Command line
./.git/hooks/update.sample:32:# --- Safety check
./.git/hooks/update.sample:45:# --- Config
./.git/hooks/update.sample:46:allowunannotated=$(git config --type=bool hooks.allowunannotated)
./.git/hooks/update.sample:47:allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
./.git/hooks/update.sample:48:denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
./.git/hooks/update.sample:49:allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
./.git/hooks/update.sample:50:allowmodifytag=$(git config --type=bool hooks.allowmodifytag)
./.git/hooks/update.sample:61:# --- Check types
./.git/hooks/update.sample:63:zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
./.git/hooks/update.sample:127:# --- Finished
./.git/hooks/pre-applypatch.sample:12:precommit="$(git rev-parse --git-path hooks/pre-commit)"
./.git/hooks/applypatch-msg.sample:13:commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
./.git/hooks/pre-push.sample:9:# $1 -- Name of the remote to which the push is being done
./.git/hooks/pre-push.sample:10:# $2 -- URL to which the push is being done
./.git/hooks/pre-push.sample:25:zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
./.git/hooks/pre-push.sample:44:		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
./README.org:1:-*- mode: org; coding: utf-8; -*-
./README.org:18:/projects$ hall init --author "mbcladwell" conmanv4 --execute
./README.org:54:;; guix environment --network --expose=/etc/ssl/certs/  --manifest=manifest.scm
./README.org:59:;;guix environment --pure --network --expose=/etc/ssl/certs/  --manifest=manifest.scm -- ./conman.scm 7 2
./README.org:70:;; cd /home/mbc/projects/conmanv3 &&  guix environment --manifest=manifest.scm -- guile -L /home/mbc/projects -e main -s ./conman.scm 1 30
./doc/conmanv4.texi:3:@c -*-texinfo-*-
